SELECT * FROM Alert where __key__ = KEY('Alert', '<id>')

SELECT * FROM Alert where __key__ IN (KEY('Alert', '<id1>'), KEY('Alert', '<id2>'))

SELECT * FROM Alert where __key__ IN (
	KEY('Alert', 'NOAA-NWS-ALERTS-GA124F00715708.FloodWarning.124F00BBE430GA.CHSFLSCHS.201831581faee839533dd71f6866967a'),
	KEY('Alert', 'NOAA-NWS-ALERTS-GA124F008064F0.FloodWarning.124F00AF6110GA.CHSFLSCHS.201831581faee839533dd71f6866967a'),
	KEY('Alert', 'NOAA-NWS-ALERTS-GA124F008FB090.FloodWarning.124F00AEEBE0GA.CHSFLSCHS.201831581faee839533dd71f6866967a'))
	
create table Subscription(id int not null, gcm text not null, area geometry not null, primary key(id), spatial index(area)) engine=myisam

-- find areas outside of the lat/lng plane
select Contains(GeomFromText('POLYGON((-90 -180, 90 -180, 90 180, -90 180, -90 -180))'), area), AsText(area) from Alert where Contains(GeomFromText('POLYGON((-90 -180, 90 -180, 90 180, -90 180, -90 -180))'), area) = 0

Version 5.5.31
select NOW(), id, expires from Alert where expires > NOW() ORDER BY expires

alter table Alert change expires expires timestamp not null default current_timestamp
ALTER TABLE Alert ALTER COLUMN expires DROP DEFAULT;

-- search by center point
select X(a), Y(a), GLENGTH(LINESTRING(a, c)) as len, t.* from (
SELECT id,
Centroid(Envelope(area)) as a,
Centroid(Envelope(GeomFromText('POLYGON((-90 -180, 90 -180, 90 180, -90 180, -90 -180))'))) as b,
Point(36.902302, -117.929688) as c
FROM Alert WHERE Intersects(area, GeomFromText('POLYGON((-90 -180, 90 -180, 90 180, -90 180, -90 -180))'))
) t 
ORDER BY len

-- caused polygon simplification to crash with multipolygon
GEOMETRYCOLLECTION (POLYGON ((36.99539 -99.99885, 36.99754 -100.08489, 37.38313 -100.10877, 37.46878 -100.106, 37.46256 -99.55465, 37.37847 -99.54121, 36.99546 -99.54611, 36.99539 -99.99885)), POLYGON ((37.73127 -101.08569, 37.82241 -101.09566, 38.25527 -101.09914, 38.25584 -100.66956, 38.25127 -100.23944, 38.25019 -100.22188, 37.99547 -100.22454, 37.73396 -100.64456, 37.73127 -101.08569)), POLYGON ((37.46256 -99.55465, 37.46991 -100.20863, 37.82504 -100.22515, 37.91071 -100.22484, 37.90521 -99.56458, 37.82025 -99.55282, 37.73092 -99.55167, 37.46256 -99.55465)), POLYGON ((37.38901 -101.08064, 37.39019 -101.51969, 37.73151 -101.52036, 37.73127 -101.08569, 37.38901 -101.08064)), POLYGON ((37.46991 -100.20863, 37.47194 -100.64352, 37.82422 -100.65284, 37.99511 -100.65321, 37.99547 -100.22454, 37.82212 -100.20656, 37.46991 -100.20863)), POLYGON ((37.73151 -101.52036, 37.73439 -102.04352, 38.25381 -102.0456, 38.25682 -101.56036, 38.25547 -101.53868, 37.82307 -101.52272, 37.73151 -101.52036)), POLYGON ((37.38718 -100.64624, 37.38851 -101.06674, 37.38901 -101.08064, 37.73127 -101.08569, 37.73396 -100.64456, 37.47194 -100.64352, 37.38718 -100.64624)), POLYGON ((37.90521 -99.56458, 37.91071 -100.22484, 37.99547 -100.22454, 38.25019 -100.22188, 38.25135 -99.58008, 38.24936 -99.56841, 38.07522 -99.56479, 37.90521 -99.56458)), POLYGON ((37.73127 -101.08569, 37.73151 -101.52036, 37.82443 -101.53671, 38.25547 -101.53868, 38.25669 -101.11613, 38.25527 -101.09914, 37.73127 -101.08569)), POLYGON ((38.25127 -100.23944, 38.25584 -100.66956, 38.69468 -100.68284, 38.6937 -100.24242, 38.25127 -100.23944)), POLYGON ((36.99753 -100.08816, 36.9978 -100.62712, 37.38718 -100.64624, 37.47194 -100.64352, 37.46991 -100.20863, 37.46878 -100.106, 37.3816 -100.09431, 36.99754 -100.08489, 36.99753 -100.08816)), POLYGON ((36.98739 -102.02311, 36.98758 -102.04042, 37.38626 -102.04156, 37.38927 -101.55271, 36.99395 -101.55301, 36.98817 -101.96703, 36.98739 -102.02311)), POLYGON ((38.25019 -100.22188, 38.25127 -100.23944, 38.6937 -100.24242, 38.69454 -100.15042, 38.69131 -99.59505, 38.6893 -99.58272, 38.25135 -99.58008, 38.25019 -100.22188)), POLYGON ((38.25527 -101.09914, 38.25669 -101.11613, 38.69544 -101.12208, 38.69638 -100.81431, 38.69468 -100.68284, 38.25584 -100.66956, 38.25527 -101.09914)), POLYGON ((36.99664 -100.95014, 36.99741 -101.06671, 37.38851 -101.06674, 37.38718 -100.64624, 37.38484 -100.63468, 36.9978 -100.62712, 36.99664 -100.95014)), POLYGON ((37.38626 -102.04156, 37.64146 -102.044, 37.73439 -102.04352, 37.73151 -101.52036, 37.39019 -101.51969, 37.38927 -101.55271, 37.38626 -102.04156)), POLYGON ((36.99395 -101.55301, 36.99665 -101.55301, 37.38927 -101.55271, 37.39019 -101.51969, 37.38901 -101.08064, 37.38851 -101.06674, 36.99741 -101.06671, 36.99395 -101.55301)), POLYGON ((38.69131 -99.59505, 38.69454 -100.15042, 39.12469 -100.14896, 39.12913 -99.58831, 38.69131 -99.59505)))

show table status where Name = 'Alerts2'

CREATE SPATIAL INDEX loc_idx ON Alerts2 (location)
alter table Alerts2 ENGINE=MyISAM
alter table AreaDB ENGINE=MyISAM
explain select *, AsText(location) from Alerts2 where Contains(GeomFromText('POLYGON((3 3, 3 4, 4 4, 4 3, 3 3))'), location)

>(.*?)NOAA-NWS-ALERTS-PA124F1E9ABAD0.FrostAdvisory.124F1EA95450PA.PHINPWPHI.91444f449d33e046772360b66652bb85
